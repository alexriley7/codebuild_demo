# Lint (cfn-lint) and Package (aws cloudformation package ...) run on templates for all branches.
# Deploy all templates on 'main' branch (stack names will be built from template names).

version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
  pre_build:
    commands:
    - env
    - aws --version
    - aws sts get-caller-identity
    - pip install --quiet --upgrade pip
    - pip install --quiet --upgrade cfn-lint
    - cfn-lint --version
  build:
    commands:
    - |
      set -eux
      echo "Running Python syntax check"
      python -m py_compile $(find * -type f -name '*.py')
      PACKAGED_DIR="/tmp/packaged"
      rm -rf "$PACKAGED_DIR"
      mkdir -p "$PACKAGED_DIR"
      TEMPLATES="$(find ./cloudformation -type f)"
      echo "Found CloudFormation templates: $TEMPLATES"
      echo "Running cfn-lint"
      # cfn-lint rules: https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/rules.md
      cfn-lint -I $TEMPLATES --ignore-checks W3002
      for TEMPLATE in $TEMPLATES; do
        FILENAME="$(basename "$TEMPLATE")"
        STACK_NAME="${FILENAME%.*}"
        echo "Packaging template '$TEMPLATE'"
        aws cloudformation package --template-file "$TEMPLATE" --s3-bucket "$S3_BUCKET" --output-template-file "${PACKAGED_DIR}/${FILENAME}"
        if [ "$CODEBUILD_SOURCE_VERSION" == 'main' ]; then
          echo "Deploying template '${PACKAGED_DIR}/${FILENAME}' as stack '$STACK_NAME'"
          aws cloudformation deploy --template-file "${PACKAGED_DIR}/${FILENAME}" --stack-name "$STACK_NAME" --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset --tags "CodeCommitRepository=${CODECOMMIT_REPO_ARN}"
        fi
      done
